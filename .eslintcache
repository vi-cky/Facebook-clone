[{"D:\\React\\facebook_messanger\\src\\index.js":"1","D:\\React\\facebook_messanger\\src\\App.js":"2","D:\\React\\facebook_messanger\\src\\reportWebVitals.js":"3","D:\\React\\facebook_messanger\\src\\Message.js":"4","D:\\React\\facebook_messanger\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2083,"mtime":1608893010422,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":758,"mtime":1608892204251,"results":"10","hashOfConfig":"7"},{"size":515,"mtime":1608882497188,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1py7zmv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\React\\facebook_messanger\\src\\index.js",[],["24","25"],"D:\\React\\facebook_messanger\\src\\App.js",["26","27"],"\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FormControl,Input,InputLabel,Button } from '@material-ui/core';\nimport Message from './Message'\nimport db from './firebase'\nimport firebase from \"firebase\";\nimport FlipMove from 'react-flip-move';\nimport img from './images/FB.png'\nimport SendIcon from '@material-ui/icons/Send';\nimport {IconButton} from '@material-ui/core';\n\nfunction App() {  \nconst[input,setInput]=useState(''); \nconst[messages,setMessages]=useState([]);\nconst[username,setUserName]=useState('');\n\nconsole.log(messages);\nuseEffect(()=>{\ndb.collection('messages')\n.orderBy('timestamp','desc')\n.onSnapshot(Snapshot => {\nsetMessages(Snapshot.docs.map(doc=>({ id:doc.id, message: doc.data() })))\n});\n},[]);\n\nuseEffect(()=>{\n setUserName( prompt(\"please enter your name\"));\n},[ ])\nconsole.log(username);\n\nconst sendMessage=(event)=>{\n  event.preventDefault();\n  setMessages([...messages, {username:username,message:input }])\n  db.collection('messages').add({\n    message:input,\n    username:username,\n    timestamp:firebase.firestore.FieldValue.serverTimestamp()\n  })\n  setInput('');\n  }\n  return (\n    <div className=\"App\">\n    <img src={img} height=\"50px;\" width=\"50px\" ></img>\n     <h1>Build By Vijay Bhopalwani 😍😍</h1>\n     <h2>Welcome <span style={{fontSize:\"25px;\" , color:\"pink\", }}>{username} </span></h2>\n      <form className=\"app__form\"> \n      <FormControl className=\"app__formControl\">\n           <InputLabel  >Enter Message ...</InputLabel>\n           <Input className=\"app__input\" placeholder=\"Enter a message...\" value={input} onChange={event=> setInput(event.target.value)} />\n            <IconButton className=\"app__iconButoon\" disabled={!input} variant=\"contained\" color=\"primary\" onClick={sendMessage}>\n              <SendIcon/>\n            </IconButton>\n      </FormControl>\n     \n    </form>\n\n  \n    <FlipMove>  \n     {\n      messages.map(({id,message}) =>(\n        \n        <Message key={id} username={username} message={message} />\n  \n      ))\n     }\n     </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React\\facebook_messanger\\src\\reportWebVitals.js",[],"D:\\React\\facebook_messanger\\src\\Message.js",[],"D:\\React\\facebook_messanger\\src\\firebase.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":39,"nodeType":"34","messageId":"35","endLine":4,"endColumn":45},{"ruleId":"36","severity":1,"message":"37","line":44,"column":5,"nodeType":"38","endLine":44,"endColumn":49},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]